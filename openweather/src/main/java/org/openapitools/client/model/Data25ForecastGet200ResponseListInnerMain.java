/*
 * OpenWeather Proxy API
 * API for fetching weather, air quality, and geocoding data from OpenWeatherMap.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Data25ForecastGet200ResponseListInnerMain
 */
@JsonPropertyOrder({
  Data25ForecastGet200ResponseListInnerMain.JSON_PROPERTY_TEMP,
  Data25ForecastGet200ResponseListInnerMain.JSON_PROPERTY_FEELS_LIKE,
  Data25ForecastGet200ResponseListInnerMain.JSON_PROPERTY_HUMIDITY
})
@JsonTypeName("_data_2_5_forecast_get_200_response_list_inner_main")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-15T16:22:21.557714607Z[Etc/UTC]", comments = "Generator version: 7.17.0-SNAPSHOT")
public class Data25ForecastGet200ResponseListInnerMain {
  public static final String JSON_PROPERTY_TEMP = "temp";
  @javax.annotation.Nullable
  private BigDecimal temp;

  public static final String JSON_PROPERTY_FEELS_LIKE = "feels_like";
  @javax.annotation.Nullable
  private BigDecimal feelsLike;

  public static final String JSON_PROPERTY_HUMIDITY = "humidity";
  @javax.annotation.Nullable
  private BigDecimal humidity;

  public Data25ForecastGet200ResponseListInnerMain() {
  }

  public Data25ForecastGet200ResponseListInnerMain temp(@javax.annotation.Nullable BigDecimal temp) {
    
    this.temp = temp;
    return this;
  }

  /**
   * Get temp
   * @return temp
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TEMP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTemp() {
    return temp;
  }


  @JsonProperty(value = JSON_PROPERTY_TEMP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemp(@javax.annotation.Nullable BigDecimal temp) {
    this.temp = temp;
  }

  public Data25ForecastGet200ResponseListInnerMain feelsLike(@javax.annotation.Nullable BigDecimal feelsLike) {
    
    this.feelsLike = feelsLike;
    return this;
  }

  /**
   * Get feelsLike
   * @return feelsLike
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_FEELS_LIKE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFeelsLike() {
    return feelsLike;
  }


  @JsonProperty(value = JSON_PROPERTY_FEELS_LIKE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeelsLike(@javax.annotation.Nullable BigDecimal feelsLike) {
    this.feelsLike = feelsLike;
  }

  public Data25ForecastGet200ResponseListInnerMain humidity(@javax.annotation.Nullable BigDecimal humidity) {
    
    this.humidity = humidity;
    return this;
  }

  /**
   * Get humidity
   * @return humidity
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_HUMIDITY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getHumidity() {
    return humidity;
  }


  @JsonProperty(value = JSON_PROPERTY_HUMIDITY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHumidity(@javax.annotation.Nullable BigDecimal humidity) {
    this.humidity = humidity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Data25ForecastGet200ResponseListInnerMain data25ForecastGet200ResponseListInnerMain = (Data25ForecastGet200ResponseListInnerMain) o;
    return Objects.equals(this.temp, data25ForecastGet200ResponseListInnerMain.temp) &&
        Objects.equals(this.feelsLike, data25ForecastGet200ResponseListInnerMain.feelsLike) &&
        Objects.equals(this.humidity, data25ForecastGet200ResponseListInnerMain.humidity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(temp, feelsLike, humidity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Data25ForecastGet200ResponseListInnerMain {\n");
    sb.append("    temp: ").append(toIndentedString(temp)).append("\n");
    sb.append("    feelsLike: ").append(toIndentedString(feelsLike)).append("\n");
    sb.append("    humidity: ").append(toIndentedString(humidity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

